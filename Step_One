import pandas as pd
import numpy as np
from mpi4py import MPI
comm = MPI.COMM_WORLD
rank = comm.Get_rank()
from DispersionRelationDeterminantFullConductivityZeff import Dispersion
#VERSION 1 run the following: ibrun -np 64 0MTMDispersion_MPI.py
#                              9=# of processes running in parallel.
# this code can most likely be optimized to run on all arrays universally

filename='MTM_dispersion_n_scanp169509.04218_465'
#MPI_INIT not sure if necessary 

def Dispersion_calc(filename):
    rank    #(test)
    gamma_complex_temp=0                   
    gamma_complex=[]
    #Scatter1=[]
    data=pd.read_csv(filename+'.csv')  	#data is a dataframe.                          #code will run on all procs unless specified, careful.       
 
    nu=data['nu']
    nx=len(nu)
    zeff=data['zeff'][0]
  
    eta=data['eta']

    shat=data['shat']

    beta=data['beta']
  
    ky=data['ky']
    
    mu=data['mu']
   
    xstar=data['xstar'][0]
    
    ModIndex= 1
    
    if rank == 0:
        for i in range(nx):
            print(nu, eta, shat, beta, ky, mu, zeff, ModIndex, xstar)
            
    for i in range(nx):
        if rank == i:     
            gamma_complex_temp=Dispersion(nu[i], eta[i], shat[i], beta[i], ky[i], mu[i], zeff, ModIndex, xstar)  
       
            #gamma_complex.append(1) ?????present from inital code, unsure of purpose
              
        gamma_complex.append(gamma_complex_temp)
          
        
    
    gamma_complex=np.asarray(gamma_complex)
    #factor=np.asarray(factor)
    gamma=gamma_complex.imag
    omega=gamma_complex.real

    return gamma,omega


    gamma,omega=Dispersion_calc(filename)
